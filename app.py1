from flask import Flask, render_template, request
import time

# If you have a CausalEngine or other business logic, import it here:
# from causal_engine import CausalEngine
# engine = CausalEngine()

app = Flask(__name__)

# Simple in-memory conversation history (for demo only).
conversation_history = []

@app.route('/', methods=['GET'])
def index():
    """
    Render the chat input page.
    """
    return render_template('index.html')

@app.route('/ask', methods=['POST'])
def ask():
    """
    Handle user question, update history, compute response, and render results.
    """
    user_input = request.form.get('user_input', '').strip()
    if not user_input:
        return render_template('index.html', error='Please enter a question.')

    # Add to history
    conversation_history.append({'role': 'user', 'text': user_input})

    # TODO: Replace the following stub with your partner's AI/model invocation:
    # Example: temp, causes = engine.compute_response(user_input)
    # For demo purposes, we simulate:
    time.sleep(1.5)  # simulate processing delay
    temp = 0.5
    causes = {
        'Variable A': 0.85,
        'Variable B': 0.78,
        'Variable C': 0.72
    }

    # Add model response to history
    conversation_history.append({'role': 'ai', 'text': f"Causal strengths: {causes}"})

    return render_template('result1.html', temp=temp, causes=causes, history=conversation_history)

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)
